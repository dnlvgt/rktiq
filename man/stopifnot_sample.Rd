% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample.R
\name{stopifnot_sample}
\alias{stopifnot_sample}
\title{Argumente-Check (Sampling-Funktionen)}
\usage{
stopifnot_sample(
  n = 1,
  int_start = lubridate::origin,
  int_end = lubridate::origin + 1,
  offtime = NULL,
  event_length_in_sec = 1,
  event_overlap_in_sec = 0,
  from_start_to_end = NA,
  target_event = data.frame(),
  target_cut_in_sec = 1,
  include_tail = NA,
  from_target = NA,
  .seed = NULL,
  .max_run = 1
)
}
\arguments{
\item{n}{Numerischer Wert mit Anzahl der zu samplenden Ereignisse}

\item{int_start}{POSIXct-Zeitstempel mit Startzeitpunkt des Sample-Zeitraums.}

\item{int_end}{POSIXct-Zeitstempel mit Endzeitpunkt des Sample-Zeitraums.}

\item{offtime}{Dataframe, der die Offtime-Ereignisse beinhaltet. Die
Ereignisse sind anhand ihrer Start-/Endzeitpunkte beschrieben, die jeweils
in den Spalten \emph{start} und \emph{end} uebergeben werden.}

\item{event_length_in_sec}{Numerischer Wert mit der Laenge der Ereignisse (in
Sekunden).}

\item{event_overlap_in_sec}{Numerischer Wert mit der Laenge des Intervalls
(in Sekunden), in dem sich zwei aufeinanderfolgende Ereignisse ueberlappen
duerfen (Default: 0, d.h. keine Ueberlappung erlaubt).}

\item{from_start_to_end}{Logischer Wert, ob Ereignisse von \code{int_start}
nach \code{int_end} erzeugt werden oder andersrum (Default: \emph{TRUE},
d.h. es wird bei \code{int_start} begonnen).}

\item{target_event}{Dataframe, der die Zielereignisse beinhaltet. Die
Ereignisse sind anhand ihrer Start-/Endzeitpunkte beschrieben, die jeweils
in den Spalten \emph{start} und \emph{end} uebergeben werden.}

\item{target_cut_in_sec}{Numerischer Wert mit der Laenge des Zeitfensters (in
Sekunden), das vor jedem Zielereignis liegt und den Bereich der potentiell
positiven Ereignisse umfasst.}

\item{include_tail}{Logischer Wert, ob Ereignisse nach dem letzten
Zielereignis platziert werden koennen (Default: \emph{FALSE}).}

\item{from_target}{Logischer Wert, ob Ereignisse von den Zielereignissen
weglaufend erzeugt werden oder zu ihnen hinlaufend (Default: \emph{TRUE},
d.h. sie laufen von den Zielereignissen weg). Die Richtung ist abhaengig
von \code{from_start_to_event}).}

\item{.seed}{Numerischer Wert mit Seed-Wert, mit dem der Zufallsgenerator
initialisiert wird. Darf auch \emph{NULL} sein, dann wird zur
Initialisierung die aktuelle Systemzeit herangezogen (Default: \emph{NULL},
d.h. bei jedem Aufruf sollten unterschiedliche Ergebnisse erzeugt werden).}

\item{.max_run}{Numerischer Wert mit Anzahl der Versuche, die je Ereignis
unternommen werden sollen, um es im Zeitraum zu platzieren (Default: 1E3).}
}
\description{
Hilfsfunktion zum Ueberpruefen einer Reihe von Argumenten, ob sie mit
korrekten Typen und sinnvollen Werten uebergeben wurden. Sobald ein Verstoss
festgestellt wird, wird die Ausfuehrung unterbrochen. Da diese Test
wiederholt in den Sampling-Funktionen auftreten, wurden sie in diese Funktion
ausgelagert.
}
\seealso{
Other Argument-Funktionen: 
\code{\link{stopifnot_test}()}
}
\concept{Argument-Funktionen}
\keyword{internal}
