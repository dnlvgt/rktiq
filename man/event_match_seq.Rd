% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event.R
\name{event_match_seq}
\alias{event_match_seq}
\title{Aufeinanderfolgende Ereignisse}
\usage{
event_match_seq(
  x,
  y,
  time_var_x = "time",
  time_var_y = "time",
  last_before = TRUE,
  is_strict = TRUE,
  remove_na = TRUE,
  .progress = FALSE
)
}
\arguments{
\item{x}{Dataframe mit der Startereignismenge \code{x}.}

\item{y}{Dataframe mit der Endereignismenge \code{y}.}

\item{time_var_x}{Spaltenname (Symbol oder Character) der Zeitvariable in
Dataframe \code{x} (Default: \emph{"time"}).}

\item{time_var_y}{Spaltenname (Symbol oder Character) der Zeitvariable in
Dataframe \code{y} (Default: \emph{"time"}).}

\item{last_before}{Logischer Wert, ob letzter Startzeitpunkt vor Endzeitpunkt
bestimmt werden soll oder erster Startzeitpunkt nach Endzeitpunkt (Default:
\emph{TRUE}, d.h. letzter Zeitpunkt wird gefunden).}

\item{is_strict}{Logischer Wert, ob eine minimale zeitliche Differenz
zwischen den Ereignissen vorliegen muss, damit sie als aufeinanderfolgend
gelten. Anderenfalls gelten Ereignisse mit identischem Start/Ende ebenfalls
als aufeinanderfolgend (Default: \emph{TRUE}, d.h. die strengere Definition
gilt).}

\item{remove_na}{Logischer Wert, ob \emph{NA}-Eintraege im resultierenden
Dataframe entfernt werden. D.h. Elemente aus \code{y}, denen kein Zeitpunkt
aus \code{x} zugeordnet werden kann, werden verworfen (Default:
\emph{TRUE}, d.h. \emph{NA}-Werte werden entfernt).}

\item{.progress}{Logischer Wert, ob Fortschrittsbalken angezeigt wird.}
}
\value{
Dataframe mit den zugeordneten Zeitpunkten.
}
\description{
Ordnet jedem Startereignis aus Menge \code{x} ein passendes Endereignis aus
\code{y} zu. Dabei wird standardmaessig davon ausgegangen, dass der
zugehoerige Startzeitpunkt der (zeitlich gesehen) letzte ist, der vor dem
Endzeitpunkt liegt. Falls gewuenscht, werden die Spalten des resultierenden
Dataframes umbenannt, um eine eindeutige Zuordnung zu ermoeglichen.
}
\section{Anmerkung}{

Prinzipiell liesse sich diese Funktion auch mit einem Join realisieren,
allerdings kommt es dabei zu Speicherplatzproblemen.
}

\section{Future}{
 Da dieser Verarbeitungsschritt u.U. etwas laenger dauern
  kann, kann hierfuer mittels \code{future::plan} eine parallele Verarbeitung
  zugeschaltet werden. Durch das Argument \code{.progress} kann ggf. ein
  Forschrittsbalken angezeigt werden.
}

\seealso{
Other Ereignisfunktionen: 
\code{\link{event_detect}()},
\code{\link{event_target}()},
\code{\link{event_test}()}
}
\concept{Ereignisfunktionen}
