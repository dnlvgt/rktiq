% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event.R
\name{event_test}
\alias{event_test}
\title{Testet Ereignisse auf Bedingungen (x vs. y)}
\usage{
event_test(x, y, condition, swap_xy = FALSE, ...)
}
\arguments{
\item{x}{Dataframe, der die zu testende Menge an Ereignissen beinhaltet.}

\item{y}{Dataframe, der die fuer die Tests herangezogene Menge an Ereignissen
beinhaltet.}

\item{condition}{Funktion, die zum Testen der beiden Ereignismengen verwendet
wird.}

\item{swap_xy}{Logischer Wert, ob Reihenfolge der Ereignismengen beim
Berechnen der Testergebnisse zu \emph{y vs. x} veraendert wird (Default:
\emph{FALSE}, d.h. Reihenfolge bleibt bei \emph{x vs. y}).}

\item{...}{Weitere Argumente, die an Funktion \code{condition} durchgereicht
werden.}
}
\value{
Logischer Vektor, welche Ereignisse von \code{x} die Bedingung
  erfuellen.
}
\description{
Stellt fuer zwei Mengen von Ereignissen fest, ob bestimmte zeitliche
Bedingungen zwischen ihnen erfuellt sind (z.B. ueberlappend, beinhaltend,
angrenzend, identisch). Die Ereignisse werden anhand ihrer
Start-/Endzeitpunkte beschrieben, die jeweils in den Spalten \emph{start} und
\emph{end} uebergeben werden.
}
\details{
Da einige Tests nicht kommutativ sind und somit die Reihenfolge der
Ereignismengen entscheidend sein kann (z.B. bei \code{include}), kann mittels
Argument \code{swap_xy} die Reihenfolge veraendert werden.
}
\seealso{
\code{\link{overlap}}, \code{\link{include}}, \code{\link{nearby}},
  \code{\link{equal}}

Other Ereignisfunktionen: 
\code{\link{event_detect}()},
\code{\link{event_match_seq}()},
\code{\link{event_target}()}
}
\concept{Ereignisfunktionen}
\keyword{internal}
